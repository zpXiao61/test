SAIL Python API
===============

SAIL 使用 pybind11 封装了一套 python 接口, 支持python3.5。

sail.Handle
___________

.. code-block:: python

    def __init__(tpu_id):
        """ Constructor handle instance

        Parameters
        ----------
        tpu_id : int
            create handle with tpu Id
        """

    def free_ptr():
        """ free handle
        """

sail.IOMode
___________

.. code-block:: python

        # Input tensors are in system memory while output tensors are in device memory
        sail.IOMode.SYSI
        # Input tensors are in device memory while output tensors are in system memory.
        sail.IOMode.SYSO
        # Both input and output tensors are in system memory.
        sail.IOMode.SYSIO
        # Both input and output tensors are in device memory.
        sail.IOMode.DEVIO

sail.Tensor
___________

**1). Tensor**

    .. code-block:: python

        def __init__(handle, array_data):
            """ Constructor allocates device memory of the tensor.

            Parameters
            ----------
            handle : sail.Handle
                Handle instance
            array_data : numpy.array
                Tensor ndarray data
            """

        def __init__(handle, array_shape):
            """ Constructor allocates system memory and device memory of the tensor.

            Parameters
            ----------
            handle : sail.Handle
                Handle instance
            array_shape : tuple
                Tensor init shape
            """

**2). shape**

    .. code-block:: python

        def shape():
            """ Get shape of the tensor.

            Returns
            -------
            tensor_shape : list
                Shape of the tensor
            """

**3). sync_s2d**

    .. code-block:: python

        def sync_s2d():
            """ Copy data from system memory to device memory.
            """

        def sync_s2d(size):
            """ Copy data from system memory to device memory with specified size.

            Parameters
            ----------
            size : int
                Byte size to be copied
            """

**4). sync_d2s**

    .. code-block:: python

        def sync_d2s():
            """ Copy data from device memory to system memory.
            """

        def sync_d2s(size):
            """ Copy data from device memory to system memory with specified size.

            Parameters
            ----------
            size : int
                Byte size to be copied
            """

sail.Engine
___________

**1). Engine**

    .. code-block:: python

        def __init__(bmodel_dir, tpus, mode):
            """ Constructor using default input shapes.

            Parameters
            ----------
            context_dir : str
                The path of algorithm bmodel
            tpus : str
                Ids of TPUS to be used, split by comma. Eg.: "0,1" for
                TPU 0 and TPU 1, "all" for all available TPUs
            mode : sail.IOMode
                Specify the input/output tensors are in system memory
                or device memory
            """

        def __init__(bmodel_file, bmodel_byte_size, tpus, mode):
            """ Constructor using default input shapes with bmodel which
            loaded in memory

            Parameters
            ----------
            bmodel_file : file
                The file stream of bmodel
            bmodel_byte_size : int
                Bmodel byte size
            tpus : str
                Ids of TPUS to be used, split by comma. Eg.: "0,1" for
                TPU 0 and TPU 1, "all" for all available TPUs
            mode : sail.IOMode
                Specify the input/output tensors are in system memory
                or device memory
            """

**2). get_graph_names**

    .. code-block:: python

        def get_graph_names():
            """ Get all graph names in the loaded context.

            Returns
            -------
            graph_names : list
                Graph names list in loaded context
            """

**3). get_input_names**

    .. code-block:: python

        def get_input_names(graph_name):
            """ Get all input tensor names of the specified graph.

            Parameters
            ----------
            graph_name : str
                Specified graph name

            Returns
            -------
            input_names : list
                All the input tensor names of the graph
            """

**4). get_output_names**

    .. code-block:: python

        def get_output_names(graph_name):
            """ Get all output tensor names of the specified graph.

            Parameters
            ----------
            graph_name : str
                Specified graph name

            Returns
            -------
            input_names : list
                All the output tensor names of the graph
            """

**5). get_handle**

    .. code-block:: python

        def get_handle(tpu_id):
            """ Get Handle instance of the specified tpu_id.

            Parameters
            ----------
            tpu_id : int
                Specified tpu Id

            Returns
            -------
            handle : sail.Handle
                Get the bm handle instance
            """

**6). get_max_input_shapes**

    .. code-block:: python

        def get_max_input_shapes(graph_name, is_total):
            """ Get max shapes of input tensors in a graph.
            For static models, the max shape is the static shape and it should not be
            changed. While for dynamic models, the tensor shape should be smaller than
            or equal to the max shape.

            Parameters
            ----------
            graph_name : str
                The specified graph name
            is_total : bool
                True for total specified tpus; False for a single one

            Returns
            -------
            max_shapes : dict {str : list}
                The max shape of the input_tensors
            """

**7). get_input_shape**

    .. code-block:: python

        def get_input_shape(graph_name, tensor_name):
            """ Get the shape of an input tensor in a graph.

            Parameters
            ----------
            graph_name : str
                The specified graph name
            tensor_name : str
                The specified input tensor name

            Returns
            -------
            tensor_shape : list
                The shape of the tensor
            """

**8). get_output_shape**

    .. code-block:: python

        def get_output_shape(graph_name, tensor_name):
            """ Get the shape of an output tensor in a graph.

            Parameters
            ----------
            graph_name : str
                The specified graph name
            tensor_name : str
                The specified output tensor name

            Returns
            -------
            tensor_shape : list
                The shape of the tensor
            """

**9). process**

    .. code-block:: python

        def process(graph_name, input_tensors):
            """ Do network inference

            Parameters
            ----------
            graph_name : str
                The specified graph name
            input_tensors : dict {str : numpy.array}
                Data of all input tensors in system memory
            """

sail.Bmdnn
__________

**1). Bmdnn**

    .. code-block:: python

        def __init__(handle):
            """ Bmdnn constructor

            Parameters
            ----------
            handle : sail.Handle
                handle instance
            """

**2). sigmoid**

    .. code-block:: python

        def sigmoid(input, output):
            """ Sigmoid operation.

            Parameters
            ----------
            input : sail.Tensor
                Input tensor
            output : sail.Tensor
                Output tensor

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**3). tanh**

    .. code-block:: python

        def tanh(input, output):
            """ Tanh operation.

            Parameters
            ----------
            input : sail.Tensor
                Input tensor
            output : sail.Tensor
                Output tensor

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**4). softmax**

    .. code-block:: python

        def softmax(input, output):
            """ Softmax operation.

            Parameters
            ----------
            input : sail.Tensor
                Input tensor
            output : sail.Tensor
                Output output

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**5). relu**

    .. code-block:: python

        def relu(input, output):
            """ Relu operation.

            Parameters
            ----------
            input : sail.Tensor
                Input tensor
            output : sail.Tensor
                Output tensor

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**6). matmul**

    .. code-block:: python

        def matmul(input, weight, bias, output):
            """ Matrix multiplication plus bias.

            Parameters
            ----------
            input : sail.Tensor
                Input tensor
            weight : sail.Tensor
                Weight tensor
            bias : sail.Tensor
                Bias tensor
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**7). add**

    .. code-block:: python

        def add(input_a, input_b, output):
            """ Addition operation, output = input_a + input_b.

            Parameters
            ----------
            input_a : sail.Tensor
                Input tensor A
            input_b : sail.Tensor
                Input tensor B
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**8). sub**

    .. code-block:: python

        def sub(input_a, input_b, output):
            """ Subtraction operation, output = input_a - input_b.

            Parameters
            ----------
            input_a : sail.Tensor
                Input tensor A
            input_b : sail.Tensor
                Input tensor B
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**9). mul**

    .. code-block:: python

        def mul(input_a, input_b, output):
            """ Multiplication operation, output = input_a * input_b.

            Parameters
            ----------
            input_a : sail.Tensor
                Input tensor A
            input_b : sail.Tensor
                Input tensor B
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**10). div**

    .. code-block:: python

        def mul(input_a, input_b, output):
            """ Division operation, output = input_a / input_b.

            Parameters
            ----------
            input_a : sail.Tensor
                Input tensor A
            input_b : sail.Tensor
                Input tensor B
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """


sail.Bmcv
_________

**1). Bmcv**

    .. code-block:: python

        def __init__(handle):
            """ Bmcv constructor

            Parameters
            ----------
            handle : sail.Handle
                handle instance
            """

**2). resize**

    .. code-block:: python

        def resize(input, output):
            """ Resize an image with interpolation of INTER_NEAREST.

            Parameters
            ----------
            input : sail.Tensor
                Input image data
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**3). crop**

    .. code-block:: python

        def crop(input, output, top, left):
            """ Crop an image.

            Parameters
            ----------
            input : sail.Tensor
                Input image data
            output : sail.Tensor
                Output image data
            top : int
                Start point most top from original image
            left : int
                Start point most left from original image

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**4). resize_norm**

    .. code-block:: python

        def resize_norm(input, output, scale_b, bias_b,
                        scale_g, bias_g, scale_r, bias_g):
            """ Resize an image and do normalizition.

            Parameters
            ----------
            input : sail.Tensor
                Input image data
            output : sail.Tensor
                Output image data
            scale_b : float
                Scale factor for channel b
            bias_b : float
                Bias for channel b
            scale_g : float
                Scale factor for channel g
            bias_g ： float
                Bias for channel g
            scale_r : float
                Scale factor for channel r

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**5). transpose**

    .. code-block:: python

        def transpose(input, output):
            """ Transpose an image.

            Parameters
            ----------
            input : sail.Tensor
                Input image data
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """

**6). bgrsplit**

    .. code-block:: python

        def bgrsplit(input, output):
            """Convert packed BGR image data to BGR planar data format.

            Parameters
            ----------
            input : sail.Tensor
                Input image data
            output : sail.Tensor
                Output image data

            Returns
            -------
            status : int
                0 for success and other for failure
            """

